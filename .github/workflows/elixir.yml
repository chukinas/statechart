name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  MIX_ENV: test
  ImageOS: ubuntu20

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Elixir
      uses: erlef/setup-beam@v1.15
      with:
        elixir-version: '1.12.3' # Define the elixir version [required]
        otp-version: '24.1' # Define the OTP version [required]

    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run tests
      run: mix test --exclude not_implemented --cover --export-coverage default

    - name: Run test coverage
      run: mix test.coverage

    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: tmp/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p tmp/plts
        mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --no-check --halt-exit-status

# https://hashrocket.com/blog/posts/build-the-ultimate-elixir-ci-with-github-actions
